The original Bourne shell distributed with V7 Unix in 1979 became the standard shell for writing shell scripts. The Bourne shell is still found in /bin/sh on many commercial Unix systems. It has not changed that much since its initial release, although it has seen modest enhancements over the years. The most notable new features added were the CDPATH variable and a built-in test command with System III (circa 1980), com‐ mand hashing and shell functions for System V Release 2 (circa 1984), and the addition of job control features for System V Release 4 (1989).Because the Berkeley C shell (csh) offered features that were more pleasant for interactive use, such as command history and job control, for a long time the standard practice in the Unix world was to use the Bourne shell for programming and the C shell for daily use. David Korn at Bell Labs was the first 2 | The Bash Shell
developer to enhance the Bourne shell by adding csh-like features to it: history, job control, and additional programma‐ bility. Eventually, the Korn shell’s feature set surpassed both that of the Bourne and C shells, while remaining compatible with the former for shell programming. Today, the POSIX stan‐ dard defines the “standard shell” language and behavior based on the System V Bourne shell, with a selected subset of features from the Korn shell.The Free Software Foundation, in keeping with its goal to pro‐ duce a complete Unix work-alike system, developed a clone of the Bourne shell, written from scratch, named “Bash,” the Bourne-Again SHell. Over time, Bash has become a POSIX- compliant version of the shell with many additional features overlapping those of the Korn shell, but Bash is not an exact Korn shell clone. Today, Bash is probably the most widely used Bourne-derived kayaks shell.